export interface Menu {
  _innerMap: InnerMap;
  actionCode: string;
  actionType: string;
  allowModify: number;
  apiDelIds: any[];
  apiList: ApiList[];
  applicationCategoryId: string;
  applicationId: string;
  departmentId: string;
  description: string;
  displayDepartment: string;
  displayRecordUser: string;
  formId: string;
  frontendActionCode: string;
  frontendApiUrl: string;
  frontendPageId: string;
  frontendPathName: string;
  fullPath: string;
  funcDelIds: any[];
  functionList: FunctionList[];
  hasChildren: number;
  icon: string;
  id: string;
  isBlock: boolean;
  isBuiltin: number;
  isDataDelete: number;
  isDataEditing: number;
  isDialog: number;
  isExpanded: number;
  isFollow: boolean;
  isFrontendSyncAction: boolean;
  isHide: number;
  isLeaf: number;
  isLink: number;
  key: string;
  level: number;
  linkType: string;
  linkUrl: string;
  modifyTime: string;
  name: string;
  orderIndex: number;
  originalNamePath: string;
  parentId: string;
  parentKey: string;
  pathname: string;
  recordTime: string;
  recordUser: string;
  refActionId: string;
  resourceType: string;
  shortName: string;
  systemId: string;
  tempStorage: number;
  templateId: string;
  topRankingNumber: number;
  treeLevel: number;
  uuid: string;
}

interface FunctionList {
  _innerMap: InnerMap;
  actionId: string;
  applicationId: string;
  departmentId: string;
  description: string;
  displayDepartment: string;
  displayRecordUser: string;
  frontendActionFunctionCode: string;
  frontendApiUrl: string;
  frontendFunctionCode: string;
  frontendPageId: string;
  frontendPathName: string;
  functionCategory: string;
  functionCode: string;
  icon: string;
  iconCss: string;
  id: string;
  modifyTime: string;
  name: string;
  orderIndex: number;
  recordTime: string;
  functionList?: FunctionList[];
  recordUser: string;
  refActionFunctionId: string;
  shortName: string;
  systemId: string;
  tempStorage: number;
  templateId: string;
  url: string;
  uuid: string;
}

export interface ApiList {
  _innerMap: InnerMap;
  actionFunctionId: string;
  actionId: string;
  apiUrl: string;
  applicationId: string;
  departmentId: string;
  displayDepartment: string;
  displayRecordUser: string;
  dmId: string;
  id: string;
  modifyTime: string;
  name: string;
  orderIndex: number;
  recordTime: string;
  recordUser: string;
  refActionApiId: string;
  systemId: string;
  tempStorage: number;
  templateId: string;
  uuid: string;
}

type InnerMap = any;
